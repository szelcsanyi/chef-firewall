#!/bin/bash

###
# Generated by Chef for [<%= node[:fqdn] %>]
# Environment: <%= node.chef_environment %>
###

set -o errexit
set -o nounset
set -o pipefail

<%  if node[:platform_version] >= '20.04' %>
iptables="/usr/sbin/iptables"
ip6tables="/usr/sbin/ip6tables"
<% else %>
iptables="/sbin/iptables"
ip6tables="/sbin/ip6tables"
<% end %>

flush() {

        #Policies
        echo "-Policies ipv6"
        $ip6tables -P INPUT ACCEPT
        $ip6tables -P FORWARD ACCEPT
        $ip6tables -P OUTPUT ACCEPT

        echo "-Policies ipv4"
        $iptables -P INPUT ACCEPT
        $iptables -P FORWARD ACCEPT
        $iptables -P OUTPUT ACCEPT

        $iptables -F
        $iptables -X
        $iptables -t mangle -F
        $iptables -t mangle -X
        $iptables -t nat -F
        $iptables -t nat -X
        $iptables -t raw -F
        $iptables -t raw -X

        $ip6tables -F
        $ip6tables -X
        $ip6tables -t mangle -F
        $ip6tables -t mangle -X
        $ip6tables -t raw -F
        $ip6tables -t raw -X

}

case $1 in
        start|restart|reload)
                flush
<%
chains = []
policies = []
rules = []
@parameters.each do |protoversion, val1|
    rules << "#"*80
    rules << "# Rules for #{protoversion}"
    iptables = (protoversion.to_s=='ipv4') ? '$iptables' : '$ip6tables'
    rules << "#"*20
    val1.each do |table, val2|
        rules << "\n\t\t"+"#"*20
        rules << "# #{table} table"
        rules << "#"*20
        val2.each do |chain, settings|
            rules << "\n\t\t#--- #{chain} chain ------#"
            chains << "#{iptables} -t #{table} -N #{chain}" unless ["INPUT", "OUTPUT", "FORWARD", "PREROUTING", "POSTROUTING"].include?(chain.to_s)
            settings[:rules].each do |rule|
                rules << ((rule[:enabled]) ? "" : "# " ) + "#{iptables} -t #{table} " + ((rule[:position]=="APPEND") ? "-A #{chain} " : "-I #{chain} #{rule[:position]} ") + "-p #{rule[:proto]} #{rule[:rule]} -m comment --comment \"#{rule[:comment]}\" -j #{rule[:jump]}"
            end
            policies << "#{iptables} -t #{table} -P #{chain} #{settings[:policy]}" unless settings[:policy].nil? || settings[:policy].empty?
        end
    end
    rules << "#"*80+"\n"
end
%>

                <%= "#"*40 %>
                # Chains:
                <%= chains.join("\n\t\t")%>
                <%= "#"*40 %>

                <%= rules.join("\n\t\t")%>

                <%= "#"*40 %>
                # Policies:
                <%= policies.join("\n\t\t")%>
                <%= "#"*40 %>

                /etc/init.d/procps start
                ;;
        stop)
                flush
                ;;
        *)
                echo "Usage: $(basename $0) {start|stop|restart|reload}"
esac
